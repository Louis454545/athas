name: 'Build Windows'

on:
  workflow_dispatch:
    inputs:
      upload_artifacts:
        description: 'Upload build artifacts'
        required: false
        default: true
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-windows:
    permissions:
      contents: read
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install frontend dependencies
        run: bun install

      - name: Run typecheck
        run: bun typecheck

      - name: Run biome check
        run: bun check

      - uses: tauri-apps/tauri-action@v0
        id: tauri-build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ''
          includeRelease: false
          includeUpdaterJson: false

      - name: List build output
        run: |
          echo "Build completed. Listing target directory:"
          if (Test-Path "src-tauri\target\release\bundle") {
            Get-ChildItem -Path "src-tauri\target\release\bundle" -Recurse -File | Select-Object FullName, Length
          } else {
            echo "Bundle directory not found"
          }
        shell: pwsh

      - name: Upload Windows MSI artifact
        if: ${{ inputs.upload_artifacts != false }}
        uses: actions/upload-artifact@v4
        with:
          name: athas-windows-msi
          path: src-tauri/target/release/bundle/msi/*.msi
          if-no-files-found: warn

      - name: Upload Windows NSIS installer (if exists)
        if: ${{ inputs.upload_artifacts != false }}
        uses: actions/upload-artifact@v4
        with:
          name: athas-windows-nsis
          path: src-tauri/target/release/bundle/nsis/*.exe
          if-no-files-found: ignore